!function fnAuthUtilIIFE(){var t=Okta.Constants.AuthOptions.DEFAULT_MAX_CLOCK_SKEW,e=Okta._okta,n=e.isNumber,r=e.isUndefined,o=e.isNull,i=e.isString,s=e.isArray,a=e.keys,u=e.map,d=e.omit,c=e.each,p=Okta.fn.other.string,l=p.genRandomString,h=p.base64UrlToString,f=Okta.fn.url.removeTrailingSlash,m=Okta.fn.authUtil={};m.generateState=function(){return l(64)},m.generateNonce=function(){return l(64)},m.getDefaultOAuthParams=function(e){return{clientId:e.clientId,redirectUri:e.redirectUri,responseType:"id_token",responseMode:"okta_post_message",state:m.generateState(64),nonce:m.generateNonce(64),scopes:e.scopes||["openid","email"],ignoreSignature:e.ignoreSignature}},m.getOAuthUrls=function(e){var r=f(e.url),t=r+"/oauth2";return{issuer:e.issuer||r,authorizeUrl:t+"/v1/authorize",userinfoUrl:t+"/v1/userinfo",tokenUrl:t+"/v1/token",revokeUrl:t+"/v1/revoke",logoutUrl:t+"/v1/logout"}},m.removeNils=function(e){return d(e,function(e){return r(e)||o(e)})},m.toQueryParams=function(r){r=r||{},r=m.removeNils(r);var e=u(a(r),function(e){return e+"="+encodeURIComponent(r[e])});return e.length?e.join("&"):""},m.decodeToken=function(e){var r,t=e.split(".");try{r={header:JSON.parse(h(t[0])),payload:JSON.parse(h(t[1])),signature:t[2]}}catch(n){throw new Error("Malformed token")}return r},m.convertOAuthParamsToQueryParams=function(e){if(!e.clientId)throw new Error("A clientId must be specified in the Auth constructor to get a token");if(i(e.responseType)&&-1!==e.responseType.indexOf(" "))throw new Error("Multiple OAuth responseTypes must be defined as an array");var r=m.removeNils({client_id:e.clientId,code_challenge:e.codeChallenge,code_challenge_method:e.codeChallengeMethod,display:e.display,idp:e.idp,idp_scope:e.idpScope,login_hint:e.loginHint,max_age:e.maxAge,nonce:e.nonce,prompt:e.prompt,redirect_uri:e.redirectUri,response_mode:e.responseMode,response_type:e.responseType,sessionToken:e.sessionToken,state:e.state});if(c(["idp_scope","response_type"],function(e){s(r[e])&&(r[e]=r[e].join(" "))}),-1!==e.responseType.indexOf("id_token")&&-1===e.scopes.indexOf("openid"))throw new Error("openid scope must be specified in the scopes argument when requesting an id_token");return r.scope=e.scopes.join(" "),r},m.validateResponse=function(e,r){if(e.error||e.error_description){var t=new Error(e.error+": "+e.error_description);throw t.code=e.error,t}if(e.state!==r.state)throw new Error("OAuth flow response state doesn't match request state")},m.validateOptions=function(e){if(!e.clientId)throw new Error("A clientId must be specified in the Auth constructor to get a token");if(!e.redirectUri)throw new Error("The redirectUri passed to /authorize must also be passed to /token");if(!e.authorizationCode)throw new Error("An authorization code (returned from /authorize) must be passed to /token");if(!e.codeVerifier)throw new Error('The "codeVerifier" (generated and saved by your app) must be passed to /token')},m.validateClaimsTime=function(e){if(e.iat>e.exp)return"The JWT expired before it was issued";var r=Math.floor(Date.now()/1e3);return r-t>e.exp?"The JWT expired and is no longer valid":e.iat>r+t?"The JWT was issued in the future":null},m.validateClaims=function(e,r){var t=r.clientId,n=r.issuer,o=r.nonce;return e&&n&&t?o&&e.nonce!==o?"OAuth flow response nonce doesn't match request nonce":e.iss!==n?"The issuer ["+e.iss+"] does not match ["+n+"]":e.aud!==t?"The audience ["+e.aud+"] does not match ["+t+"]":null:"The jwt, iss, and aud arguments are all required"},m.isTokenStorageValid=function(e,r){if(!e||!e.access_token)return!1;if(r&&(!e.id_token||r!=e.id_token.claims.sub))return!1;var t=e.access_token;return!!n(t.expiresAt)&&t.expiresAt>Math.floor(Date.now()/1e3)}}();